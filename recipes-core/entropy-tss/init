### BEGIN INIT INFO
# Provides:             entropy-tss
# Required-Start:       $remote_fs $syslog $networking
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         1
# Short-Description:    Start and stop the entropy-tss daemon
### END INIT INFO
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/entropy-tss
NAME=entropy_tss_vc
DESC="Entropy Threshold Signature Server"
PIDFILE=/var/run/entropy_tss_vc.pid

METADATA_KEY="chain-endpoint"
METADATA_URL="http://metadata.google.internal/computeMetadata/v1/instance/attributes"

# For GCP, get chain endpoint from metadata
get_config_from_metadata() {
    if [ -n "$CHAIN_ENDPOINT" ]; then
        echo "CHAIN_ENDPOINT is already set: $CHAIN_ENDPOINT"
    else
        echo "CHAIN_ENDPOINT not set, attempting to fetch from metadata..."
        CHAIN_ENDPOINT=$(wget --header="Metadata-Flavor: Google" --tries=35 --waitretry=30 -qO - "${METADATA_URL}/${METADATA_KEY}") \
           || echo "Failed to set chain endpoint"
    fi
}


start() {
        echo -n "Starting $DESC: "
        mount -o remount,size=90% /var/volatile
        # This is a mock placeholder for the persistent fs until https://github.com/entropyxyz/meta-entropy-tss/pull/5 is merged
        mkdir -p /persist
        get_config_from_metadata
        start-stop-daemon -S -p $PIDFILE -N -10 -b -a /bin/sh -- -c "exec ${DAEMON} \
                --threshold-url 0.0.0.0:3001 \
                --chain-endpoint $CHAIN_ENDPOINT \
                2>&1 | tee /tmp/entropy-tss-logs"
        echo "$NAME."
}

stop() {
        echo -n "Stopping $DESC: "
        start-stop-daemon -K -x "$DAEMON" -p $PIDFILE
        echo "$NAME."
}
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        stop
        start
        ;;
  *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|reload}" >&2
        exit 1
        ;;
esac
exit 0
